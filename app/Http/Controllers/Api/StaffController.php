<?php

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use App\Http\Requests\StaffRequest;
use App\Http\Resources\StaffResource;
use App\Models\Staff;
use Carbon\Carbon;

class StaffController extends Controller
{
    /**
     * GET /api/merchants/{merchant}/eligible-staff
     *
     * Query string:
     *  - item: 'service' | 'package'   (required)
     *  - item_id: int                  (required)
     *  - start_at: ISO datetime        (optional)
     *  - minutes: int                  (optional)
     */
    public function index(StaffRequest $request, int $merchant)
    {
        $data = $request->validated();

        $q = Staff::query()
            ->where('merchant_id', $merchant)
            ->where('status', 'active');

        // Filter by pivot (assignment)
        if ($data['item'] === 'service') {
            $q->whereHas('services', function ($x) use ($data) {
                $x->where('staff_service.service_id', $data['item_id']);
            });
        } else { // package
            $q->whereHas('packages', function ($x) use ($data) {
                $x->where('staff_package.package_id', $data['item_id']);
            });
        }

        // Optional operating-hours window
        if (!empty($data['start_at']) && !empty($data['minutes'])) {
            $start = Carbon::parse($data['start_at']);
            $end   = (clone $start)->addMinutes($data['minutes']);
            $dow   = $start->dayOfWeekIso; // 1..7
            $from  = $start->format('H:i:s');
            $to    = $end->format('H:i:s');

            $q->whereHas('operatingHours', function ($h) use ($dow, $from, $to) {
                $h->where('day_of_week', $dow)
                  ->where('block_type', 'open')
                  ->where('start_time', '<=', $from)
                  ->where('end_time', '>=', $to);
            });
        }

        $staff = $q->select(['id','name','email','role','status'])
                   ->orderBy('name')
                   ->get();

        return response()->json([
            'ok'   => true,
            'data' => StaffResource::collection($staff),
        ]);
    }

    // Unused RESTful methods (generated by --api). Keep placeholders for completeness.
    public function store() {}
    public function show() {}
    public function update() {}
    public function destroy() {}
}
